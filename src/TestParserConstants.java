/* Generated By:JavaCC: Do not edit this line. TestParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TestParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int MULTIPLY = 7;
  /** RegularExpression Id. */
  int DIVIDE = 8;
  /** RegularExpression Id. */
  int LOGIC = 9;
  /** RegularExpression Id. */
  int INC = 10;
  /** RegularExpression Id. */
  int DEC = 11;
  /** RegularExpression Id. */
  int OVERLOOP = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int OTHER = 14;
  /** RegularExpression Id. */
  int OTHER_IF = 15;
  /** RegularExpression Id. */
  int LET = 16;
  /** RegularExpression Id. */
  int AS = 17;
  /** RegularExpression Id. */
  int WRITE = 18;
  /** RegularExpression Id. */
  int READ = 19;
  /** RegularExpression Id. */
  int AS_LONG = 20;
  /** RegularExpression Id. */
  int ITERATE = 21;
  /** RegularExpression Id. */
  int IN = 22;
  /** RegularExpression Id. */
  int TO = 23;
  /** RegularExpression Id. */
  int SWITCH = 24;
  /** RegularExpression Id. */
  int END = 25;
  /** RegularExpression Id. */
  int TYPE = 26;
  /** RegularExpression Id. */
  int CONCAT = 27;
  /** RegularExpression Id. */
  int QUOTATION = 28;
  /** RegularExpression Id. */
  int DOTS = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int OP_PARAN = 31;
  /** RegularExpression Id. */
  int ED_PARAN = 32;
  /** RegularExpression Id. */
  int OP_BRACE = 33;
  /** RegularExpression Id. */
  int ED_BRACE = 34;
  /** RegularExpression Id. */
  int OP_BRACT = 35;
  /** RegularExpression Id. */
  int ED_BRACT = 36;
  /** RegularExpression Id. */
  int CASE_END = 37;
  /** RegularExpression Id. */
  int DIGIT = 38;
  /** RegularExpression Id. */
  int CHAR = 39;
  /** RegularExpression Id. */
  int NUMBER = 40;
  /** RegularExpression Id. */
  int VAR = 41;
  /** RegularExpression Id. */
  int STRING = 42;
  /** RegularExpression Id. */
  int OPERATION = 43;
  /** RegularExpression Id. */
  int ASSIGN = 44;
  /** RegularExpression Id. */
  int EOL = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<LOGIC>",
    "\"++\"",
    "\"--\"",
    "\"loop over \\\"\"",
    "\"if\"",
    "\"other\"",
    "\"otherIf\"",
    "\"let\"",
    "\"as\"",
    "\"WriteTo\"",
    "\"ReadFrom(io.console)\"",
    "\"as long\"",
    "\"iterate \\\"\"",
    "\"in\"",
    "\"to\"",
    "\"cases\"",
    "\"end\"",
    "<TYPE>",
    "\"!!\"",
    "\"\\\"\"",
    "\":\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"[]:\"",
    "<DIGIT>",
    "<CHAR>",
    "<NUMBER>",
    "<VAR>",
    "<STRING>",
    "<OPERATION>",
    "\"!=\"",
    "\".\"",
  };

}
